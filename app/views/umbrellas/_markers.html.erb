<html>
<head>
  <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
  <title>Google Maps Multiple Markers</title>
    <script src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyBdCU6zO0KfZX_xnRwVntYu0Ozsa6T3sS0"></script>
</head>
<body>
  <div id="map" style="width: 600px; height: 450px;"></div>
  <script type="text/javascript">
    var departures = gon.departures
    var map = new google.maps.Map(document.getElementById('map'), {
      zoom: 14,
      center: new google.maps.LatLng(41.8895, -87.628121),
      mapTypeId: google.maps.MapTypeId.roadmap
    });
    var infowindow = new google.maps.InfoWindow();
    var marker, i;

    for (i = 0; i < departures.length; i++) {
      marker = new google.maps.Marker({
        position: new google.maps.LatLng(departures[i][1], departures[i][2]),
        map: map,
        icon: "<%= asset_path('clear-umbrella2.png') %>"
      });

      google.maps.event.addListener(marker, 'click', (function(marker, i) {
        return function() {
          infowindow.setContent(departures[i][0]);
          infowindow.open(map, marker);
        }
      })(marker, i));
    }

    // 1. send that address to google map geocode
    // 2. get the latlng of the search keyword
    // 3. plug that latlng into center

    // When a user submits the navbar form at the top of the page
    $(".navbar-form").submit(function(event) {
      // Stop the form from hitting the server -- interrupt the default behavior
      event.preventDefault();
      // Within the form, find the input with the name q, and determine what the user entered in that input
      var address = $(this).find('input[name=q]').val();

      // Initialize geocoder
      var geocoder = new google.maps.Geocoder();
      // Geocode the input from the user
      geocoder.geocode({'address': address}, function(results, status) {
        // console.log(results);

        // Determining the lat and lng for the address
        var lat = results[0].geometry.location.lat()
        var lng = results[0].geometry.location.lng()
        // Center the map on the new lat and lng
        var newLatLng = new google.maps.LatLng(lat, lng)
        map.setCenter(newLatLng)
      });
    });
  </script>
</body>
</html>